---
- name: Create a resource group
  azure_rm_resourcegroup:
    name: "{{ azure_resource_group }}"
    location: "{{ azure_location}}"
- name: Create virtual network
  azure_rm_virtualnetwork:
    resource_group: "{{ azure_resource_group }}"
    name: "{{ azure_nw_name }}"
    address_prefixes: "10.0.0.0/16"
- name: Add subnet
  azure_rm_subnet:
    resource_group: "{{ azure_resource_group }}"
    name: "{{ azure_subnet_name }}"
    address_prefix: "10.0.1.0/24"
    virtual_network: "{{ azure_nw_name }}"
- name: Create public IP address
  azure_rm_publicipaddress:
    resource_group: "{{ azure_resource_group }}"
    allocation_method: Static
    name: "{{ azure_vip_name }}"
- name: Create Network Security Group that allows PostgreSQL traffic and ssh
  azure_rm_securitygroup:
    resource_group: "{{ azure_resource_group }}"
    name: "{{ azure_sg_name }}"
    rules:
      - name: ssh
        protocol: Tcp
        destination_port_range: 22
        source_address_prefix: "{{ azure_control_ip }}/32"
        access: Allow
        priority: 1001
        direction: Inbound
      - name: PostgreSQL_rw
        protocol: Tcp
        destination_port_range: 5432
        access: Allow
        priority: 1002
        direction: Inbound
      - name: PostgreSQL_ro
        protocol: Tcp
        destination_port_range: 5433
        access: Allow
        priority: 1003
        direction: Inbound

- name: Create a load balancer
  azure_rm_loadbalancer:
    resource_group: "{{ azure_resource_group }}"
    name: "{{ azure_lb_name }}"
    location: "{{ azure_location }}"
    frontend_ip_configurations:
      - name: "{{ azure_lbfe_name }}"
        public_ip_address: "{{ azure_vip_name }}"
    backend_address_pools:
      - name: "{{ azure_lbbe_name }}"
    probes:
      - name: "probe_{{ azure_lb_name }}_0"
        port: 22
        interval: 10
        fail_count: 3
      - name: "probe_{{ azure_lb_name }}_1"
        port: 5432
        interval: 10
        fail_count: 3
      - name: "probe_{{ azure_lb_name }}_2"
        port: 25432
        interval: 10
        fail_count: 3
    load_balancing_rules:
      - name: "rule_{{ azure_lb_name }}_0"
        frontend_ip_configuration: "{{ azure_lbfe_name }}"
        backend_address_pool: "{{ azure_lbbe_name }}"
        frontend_port: 22
        backend_port: 22
        load_distribution: Default
        probe: "probe_{{ azure_lb_name }}_0"
      - name: "rule_{{ azure_lb_name }}_1"
        frontend_ip_configuration: "{{ azure_lbfe_name }}"
        backend_address_pool: "{{ azure_lbbe_name }}"
        frontend_port: 5432
        backend_port: 25432
        load_distribution: Default
        probe: "probe_{{ azure_lb_name }}_1"
      - name: "rule_{{ azure_lb_name }}_2"
        frontend_ip_configuration: "{{ azure_lbfe_name }}"
        backend_address_pool: "{{ azure_lbbe_name }}"
        frontend_port: 5433
        backend_port: 5432
        load_distribution: Default
        probe: "probe_{{ azure_lb_name }}_2"
- name: Read shs public key
  shell: "cat ~/.ssh/id_rsa.pub"
  register: public_ssh

- name: Create VM bastion
  azure_rm_virtualmachine:
    resource_group: "{{ azure_resource_group }}"
    name: "{{ azure_bastion_name }}"
    admin_username: "{{ ansible_user_id }}"
    tags:
      applicationRole: bastion
    plan: "{{ azure_bastion_plan }}"
    vm_size: "{{ azure_bastion_vm_size }}"
    virtual_network_name: "{{ azure_nw_name }}"
    subnet_name: "{{ azure_subnet_name }}"
    ssh_password_enabled: false
    ssh_public_keys:
      - path: /home/azureuser/.ssh/authorized_keys
        key_data: "{{ public_ssh.stdout }}"
    managed_disk_type: "{{ azure_vm_disk_type }}"
    os_disk_caching: ReadWrite
    image: "{{ azure_bastion_image }}"
  register: bastion

- name: Create VM scaleset
  azure_rm_virtualmachinescaleset:
    resource_group: "{{ azure_resource_group }}"
    name: "{{ azure_vmss_name }}"
    admin_username: "{{ ansible_user_id }}"
    single_placement_group: true
    tags:
      applicationRole: postgres
    vm_size: "{{azure_vmss_vm_size}}"
    capacity: "{{ azure_vmss_vm_count }}"
    virtual_network_name: "{{ azure_nw_name }}"
    subnet_name: "{{ azure_subnet_name }}"
    ssh_password_enabled: false
    ssh_public_keys:
      - path: /home/azureuser/.ssh/authorized_keys
        key_data: "{{ public_ssh.stdout }}"
    upgrade_policy: Manual
    tier: Standard
    managed_disk_type: "{{ azure_vm_disk_type }}"
    os_disk_caching: ReadWrite
    plan: "{{ azure_vmss_plan }}"
    image: "{{ azure_vmss_image }}"
    load_balancer: "{{ azure_lb_name }}"
    data_disks:
      - lun: 0
        disk_size_gb: "{{ azure_data_gb }}"
        managed_disk_type: "{{ azure_data_disk_type }}"
      - lun: 1
        disk_size_gb: "{{ azure_wal_gb }}"
        managed_disk_type: "{{ azure_wal_disk_type }}"

- name: Set bastion as proxy for _postgres
  copy:
    content: '{{ body | to_nice_yaml(indent=8, width=1337) }}'
    dest: "{{ inventory_dir }}/group_vars/_postgres/proxy.yml"
  vars:
    body:
      ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o ProxyCommand="ssh {{ bastion.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }} -W %h:%p -o StrictHostKeyChecking=no"'

- name: create the storage account
  azure_rm_storageaccount:
    resource_group: "{{ azure_resource_group }}"
    name: "{{ azure_storage_account_name }}"
    type: "{{ azure_storage_account_type }}"
    tags:
      applicationRole: backup

- name: Create backup bucket
  azure_rm_storageblob:
    resource_group: "{{ azure_resource_group }}"
    storage_account_name: "{{ azure_storage_account_name }}"
    container: "{{ azure_storage_container }}"

- name: Get facts for azure storage account
  azure_rm_storageaccount_info:
    resource_group: "{{ azure_resource_group }}"
    name: "{{ azure_storage_account_name }}"
    show_connection_string: true
  register: sainfo

- name: Store storage account access key in inventory
  copy:
    content: |
      ---
      {{ body | to_nice_yaml(indent=8, width=1337) }}
    dest: "{{ inventory_dir }}/group_vars/_postgres/wal-g.yml"
  vars:
    body:
      azure_backup_access_key: '{{ sainfo.storageaccounts[0].primary_endpoints.key }}'
